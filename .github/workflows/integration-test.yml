# ---------------------------------------------------------------------------------------------
# MIT License
# Copyright (c) 2021, Solace Corporation, Ricardo Gomez-Ulmke (ricardo.gomez-ulmke@solace.com)
# ---------------------------------------------------------------------------------------------

name: integration-test
on:
  # for testing
  workflow_dispatch:
  push:
    branches:
      integration-test
  # # production
  # schedule:
  # #   # - cron: '0 7 * * MON'
  #   - cron: '0 7 * * *'
  # pull_request:
  #   branches:
  #     - main
env:
  DEBUG_FLAG: ${{ true }}
  TEST_PLATFORM_DIR: "api-implementation"
  # DEBUG_FLAG: ${{ false }}
  # TEST_SOLACE_INTEGRATION_AZURE_PROJECT_NAME: "wft-solace-int-rdp-az-funcs"
  # TEST_SOLACE_INTEGRATION_AZURE_LOCATION: "West Europe"
  # TEST_TEST_RUNNER_SCRIPT: "test/run.sh"
  # TEST_TEST_RUNNER_LOGS_DIR: "tmp/logs"
  # TEST_OUTPUT_LOGS_NAME: "solace-int-rdp-az-funcs-test-logs"
jobs:
  run_tests:
    runs-on: ubuntu-18.04
    steps:
      - name: Check Auth
        if: github.event_name == 'workflow_dispatch' && github.actor != 'ricardojosegomezulmke'
        run: |
          echo "not authorized"
          echo '::set-output name=IS_AUTHORIZED::false'
        id: auth
      - name: Cancel Workflow
        if: ${{ always() && steps.auth.outputs.IS_AUTHORIZED == 'false' }}
        uses: andymckay/cancel-action@0.2

      - name: Checkout Current Branch
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: env before install
        if: env.DEBUG_FLAG == 'true'
        run: |
          echo "bash --version: "; bash --version
          echo "node --version: "; node --version
          echo "npm --version: "; npm --version
          echo ">>> environment: TEST_* "
          env | grep TEST

      - name: bootstrap
        run: |
          cd "${TEST_PLATFORM_DIR}"
          npm install -g npm
          npm install


      # - name: Set up Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.6
      #
      # - name: install components
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install ansible
      #     pip install requests
      #     pip install xmltodict
      #     pip install docker-compose
      #     ansible-galaxy collection install solace.pubsub_plus
      #     npm install
      #
      # - name: env after install
      #   if: env.DEBUG_FLAG == 'true'
      #   run: |
      #     echo "bash --version: "; bash --version
      #     echo "node --version: "; node --version
      #     echo "npm --version: "; npm --version
      #     echo "python3 --version: "; python3 --version
      #     echo "jq --version: "; jq --version
      #     echo "ansible --version: "; ansible --version
      #     echo "ansible-galaxy --version: "; ansible-galaxy --version
      #     echo "ansible-solace version::"; ansible-galaxy collection list | grep solace
      #
      # - name: Azure Login
      #   # https://github.com/marketplace/actions/azure-login
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{secrets.AZURE_CREDENTIALS}}
      #
      # - name: Run Tests
      #   run: |
      #     export SOLACE_INTEGRATION_PROJECT_HOME="$GITHUB_WORKSPACE"
      #     export SOLACE_INTEGRATION_AZURE_PROJECT_NAME="${TEST_SOLACE_INTEGRATION_AZURE_PROJECT_NAME}"
      #     export SOLACE_INTEGRATION_AZURE_LOCATION="${TEST_SOLACE_INTEGRATION_AZURE_LOCATION}"
      #     ./${TEST_TEST_RUNNER_SCRIPT}
      #
      # - name: Archive logs
      #   if: ${{ (failure() && !cancelled()) || (always() && github.event_name == 'workflow_dispatch') }}
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: ${{ env.TEST_OUTPUT_LOGS_NAME }}
      #     path: ${{ github.workspace }}/${{ env.TEST_TEST_RUNNER_LOGS_DIR }}
      #     if-no-files-found: error

###
# The End.
