
name: release
on:
  # for testing
  workflow_dispatch:

  release:
    types: [created]

env:
  DEBUG_FLAG: ${{ true }}
  # DEBUG_FLAG: ${{ false }}
  RELEASE_PLATFORM_DIR: "release"
  RELEASE_RUNNER_OUTPUT_DIR: "release/tmp"
  RELEASE_OUTPUT_NAME: "platform-api-release"

jobs:
  publish:
    runs-on: ubuntu-18.04
    steps:
      - name: Check Auth
        if: github.event_name == 'workflow_dispatch' && github.actor != 'ricardojosegomezulmke' && github.actor != '195858'
        run: |
          echo "not authorized"
          echo '::set-output name=IS_AUTHORIZED::false'
        id: auth
      - name: Cancel Workflow
        if: ${{ always() && steps.auth.outputs.IS_AUTHORIZED == 'false' }}
        uses: andymckay/cancel-action@0.2

      - name: Checkout Current Branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: env before install
        if: env.DEBUG_FLAG == 'true'
        run: |
          echo "bash --version: "; bash --version
          echo "node --version: "; node --version
          echo "npm --version: "; npm --version
          echo ">>> environment: TEST_* "
          env | grep TEST

      - name: exit
        run: |
          exit 1

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install ansible and collection dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Build and install collection
        run: |
          cd ${TEST_ANSIBLE_SOLACE_COLLECTION_DIR}
          ansible-galaxy collection build .
          ansible-galaxy collection install *.gz

      - name: Install docs make dependencies
        run: |
          pip install -r devel/devel.requirements.txt

      - name: Make docs
        run: |
          export PROJECT_HOME="$GITHUB_WORKSPACE"
          export LOG_DIR="$GITHUB_WORKSPACE/${TEST_RUNNER_LOGS_DIR}"
          export RUN_FG=true
          ./${DOCS_MAKE_SCRIPT}

      - name: Check HTML dir
        if: env.DEBUG_FLAG == 'true'
        run: |
          cd ${TEST_ANSIBLE_SOLACE_COLLECTION_DIR}
          cd docs/build/html
          ls -la

      - name: Publish gh-pages
        run: |
          git fetch origin gh-pages
          git worktree add gh-pages gh-pages
          date > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          rsync -av ${TEST_ANSIBLE_SOLACE_COLLECTION_DIR}/docs/build/html/ gh-pages/
          cd gh-pages
          git add -A
          git commit --allow-empty -F ../generated.txt
          # git push -f -u origin gh-pages
          git push -u origin gh-pages

      - name: Publish collection
        env:
          ANSIBLE_GALAXY_TOKEN: ${{ secrets.ANSIBLE_GALAXY_TOKEN }}
        run: |
          cd ${TEST_ANSIBLE_SOLACE_COLLECTION_DIR}
          ansible-galaxy collection publish *.tar.gz --api-key $ANSIBLE_GALAXY_TOKEN --import-timeout 300

      - name: Archive logs
        if: ${{ always() && steps.auth.outputs.IS_AUTHORIZED != 'false' && github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TEST_TEST_RUNNER_LOGS_NAME }}
          path: ${{ github.workspace }}/${{ env.TEST_RUNNER_LOGS_DIR }}
          if-no-files-found: error
###
# The End.
